#
# Copyright 2018-2019 Sean Spicer 
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

trigger: none  # Do not trigger automagically

pool:
  vmImage: 'windows-latest'

steps:
- task: gitversion/setup@0
  inputs:
    versionSpec: '5.x'

- task: gitversion/execute@0
  inputs:
    useConfigFile: true
    configFilePath: '$(System.DefaultWorkingDirectory)/GitVersion.yml'

- script: echo %Action%%BuildVersion%
  displayName: 'Set build version'
  env:
    Action: '##vso[build.updatebuildnumber]'
    BuildVersion: $(GitVersion.NuGetVersionV2)

- task: UseDotNet@2
  displayName: 'Install .net6'
  inputs:
    packageType: sdk
    version: '6.0.x'
    #installationPath: $(Agent.ToolsDirectory)/dotnet

- task: NuGetToolInstaller@1
  displayName: 'Install NuGet Tools'
  inputs:
    versionSpec: '6.1.0'

- task: NuGetCommand@2
  displayName: 'Restore NuGet Packages'
  inputs:
    command: 'restore'
    restoreSolution: '**/*.sln'
    feedsToUse: 'select'

- task: VSBuild@1
  displayName: 'Build Solution'
  inputs:
    solution: '**\*.sln'
    vsVersion: 17.0
    configuration: Release
    clean: true

- task: DotNetCoreCLI@2
  displayName: 'Run .NET Tests'
  inputs:
    command: 'test'
    arguments: '/property:Configuration=Release /property:Platform=x64'
    projects: '$(Agent.BuildDirectory)/src/NexSceneGraph.sln'
    publishTestResults: true

# - task: VSTest@2
  # displayName: 'Run Unit Tests'
  # inputs:
    # testSelector: 'testAssemblies'
    # testAssemblyVer2: |
      # **\*Test*.dll
      # !**\*TestAdapter.dll
      # !**\obj\**
    # searchFolder: '$(System.DefaultWorkingDirectory)'

- task: DotNetCoreCLI@2 
  displayName: 'Create NuGet Packages'
  inputs:
    command: 'pack'
    packagesToPack: '$(System.DefaultWorkingDirectory)/src/Veldrid.SceneGraph/*.csproj;$(System.DefaultWorkingDirectory)/src/Veldrid.SceneGraph.Manipulators/*.csproj;$(System.DefaultWorkingDirectory)/src/Veldrid.SceneGraph.Wpf/*.csproj'
    configuration: 'Release'
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'GitVersion.NuGetVersionV2'
    outputDir: $(Build.ArtifactStagingDirectory)

- task: NuGetCommand@2
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'Nuget.org'

#- task: DotNetCoreCLI@2
#  displayName: Push Nuget Package
#  inputs:
#    command: custom
#    custom: nuget
#    arguments: >
#      push $(Build.ArtifactStagingDirectory)/*.nupkg
#      -s $(NuGetSourceServerUrl)
#      -k $(NuGetSourceServerApiKey)